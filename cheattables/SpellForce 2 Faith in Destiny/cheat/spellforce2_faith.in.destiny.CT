<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>202</ID>
      <Description>"[X] &lt;== Spellforce 2 Faith in Destiny v2.02 Script v1.1"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : SpellForce 2 Faith in Destiny
 Game Version  : 2.02 #85918
 Proces Name   : SpellForce2FaithinDestiny.exe
 Script Version: 1.1
 CE Version    : 6.2
 Release date  : 02-Jul-2012
 Author        : Recifense
 History:
 20-Jun-12: First Release
 02-Jul-12: Removing unlimited units (v1.1)
 Features:
 - Minimum Resources
 - God Mode
   - Units
   - Buildings
 - Full Mana
 - Quick Level Up
 - Minimum Gold
 - Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"SpellForce2FaithinDestiny.exe")

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(LUDO+00250a12,8b 4c 24 1c 3b c8)    //_MR1
assert(LUDO+00250a54,8b 44 24 1c 3b 47 78) //_MR2
assert(LUDO+00250a97,8b 44 24 1c 3b 47 78) //_MR3
assert(LUDO+00464fd0,f3 0f 10 44 24 04)    //_GMH
assert(LUDO+00425493,f3 0f 10 45 18)       //_GMB
assert(LUDO+00255764,f3 0f 10 47 18)       //_MM
assert(LUDO+002bc1d3,8b ce 89 44 24 18)    //_MX
assert(LUDO+003c4400,8b 41 04 c3)          //_MG

//=========================================
alloc(MyCode,2048,LUDO)
//=========================================
// Declaration section
label(_MonRes1)
label(_MonR10)
label(_BackMR1)
label(_ExitMR1)
label(_MonRes2)
label(_BackMR2)
label(_ExitMR2)
label(_MonRes3)
label(_BackMR3)
label(_ExitMR3)
label(_GodModeH)
label(_BackGMH)
label(_ExitGMH)
label(_GodModeB)
label(_BackGMB)
label(_ExitGMB)
label(_MonMana)
label(_BackMM)
label(_ExitMM)
label(_MonXP)
label(_BackMX)
label(_ExitMX)
label(_MonGold)
label(_BackMG)
label(_ExitMG)
label(pUnit)
label(pXP)
label(pGold)
label(pPlayer)
label(iPlayerID)
label(iEnableMR)
label(iEnableGM)
label(iEnableMM)
label(iEnableMP)
label(iEnableMX)
label(iEnableMG)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(pXP)
registersymbol(pGold)
registersymbol(pPlayer)
registersymbol(iEnableMR)
registersymbol(iEnableGM)
registersymbol(iEnableMM)
registersymbol(iEnableMP)
registersymbol(iEnableMX)
registersymbol(iEnableMG)

//=========================================
MyCode:
//=========================================
_MonRes1:
 mov ecx,[esp+1C]                  // Original code
 cmp ecx,eax                       // Original code
 push ebx
 je _ExitMR1

 mov ebx,[edi+10]

 mov [pPlayer],edi
 mov [iPlayerID],ebx

 cmp dword ptr [iEnableMP],0
 je _MonR10                        // Jump if feature is disabled

// mov word ptr [edi+100],0

_MonR10:
 cmp dword ptr [iEnableMR],0
 je _ExitMR1                       // Jump if feature is disabled

 mov ebx,#6200
 cmp ebx,[ecx+10]
 jle _ExitMR1

 mov [ecx+10],ebx

_ExitMR1:
 pop ebx

 mov ecx,[esp+1C]                  // Original code
 cmp ecx,eax                       // Original code
 jmp _BackMR1                      // Back to main code

//=========================================
_MonRes2:
 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 push ebx
 je _ExitMR2

 cmp dword ptr [iEnableMR],0
 je _ExitMR2                       // Jump if feature is disabled

 mov ebx,#6200
 cmp ebx,[eax+10]
 jle _ExitMR2

 mov [eax+10],ebx

_ExitMR2:
 pop ebx

 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 jmp _BackMR2                      // Back to main code

//=========================================
_MonRes3:
 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 push ebx
 je _ExitMR3

 cmp dword ptr [iEnableMR],0
 je _ExitMR3                       // Jump if feature is disabled

 mov ebx,#6200
 cmp ebx,[eax+10]
 jle _ExitMR3

 mov [eax+10],ebx

_ExitMR3:
 pop ebx

 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 jmp _BackMR3                      // Back to main code

//=========================================
// Human Entity
_GodModeH:
 push eax
 push ebx

 mov eax,[esp+0c]
 test eax,eax
 jns _ExitGMH

 mov [pUnit],ecx                   // Save ptr for debugging

 cmp dword ptr [iEnableGM],0
 je _ExitGMH                       // Jump if feature is disabled

 cmp ebp,05000000
 jle _ExitGMH

 test ebp,ebp
 js _ExitGMH

 mov eax,[ebp+000000d8]
 cmp eax,[iPlayerID]
 jne _ExitGMH

 xor eax,eax                       // value2decrease = 0
 mov [esp+0c],eax

 mov eax,[ecx+1c]
 cmp eax,[ecx+18]
 jle _ExitGMH

 mov [ecx+18],eax

_ExitGMH:
 pop ebx
 pop eax

 movss xmm0,[esp+04]               // Original code
 jmp _BackGMH                      // Back to main code

//=========================================
// Building Entity
_GodModeB:
 push eax

 cmp dword ptr [iEnableGM],0
 je _ExitGMB                       // Jump if feature is disabled

 mov eax,[esi+000000bc]
 cmp eax,[iPlayerID]
 jne _ExitGMB

 mov eax,[ebp+1c]
 cmp eax,[ebp+18]
 jle _ExitGMB

 mov [ebp+18],eax

_ExitGMB:
 pop eax

 movss xmm0,[ebp+18]               // Original code (rd HP)
 jmp _BackGMB                      // Back to main code

//=========================================
_MonMana:
 push eax

 cmp dword ptr [iEnableMM],0
 je _ExitMM                       // Jump if feature is disabled

 mov eax,[esi+000000d8]
 cmp eax,[iPlayerID]
 jne _ExitMM

 mov eax,[edi+1c]
 cmp eax,[edi+18]
 jle _ExitMM

 mov [edi+18],eax

_ExitMM:
 pop eax

 movss xmm0,[edi+18]               // Original code (rd mana)
 jmp _BackMM                       // Back to main code

//=========================================
// ESI = pXP  (ESP+20 = pUnitInfo)
// EAX = XP_Needed
_MonXP:
 mov [pXP],esi

 cmp dword ptr [iEnableMX],0
 je _ExitMX                        // Jump if feature is disabled

 mov ecx,[esi+00000094]
 cmp eax,ecx
 jle _ExitMX

 mov ecx,eax
 dec ecx
 mov [esi+00000094],ecx            // cXP = needed - 1

_ExitMX:
 mov [esp+18],eax                  // Original code (needed XP)
 mov ecx,esi                       // Original code (pXP)
 jmp _BackMX                       // Back to main code

//=========================================
// In the inventory
_MonGold:
 mov [pGold],ecx

 cmp dword ptr [iEnableMG],0
 je _ExitMG                        // Jump if feature is disabled

 mov eax,#62000
 cmp eax,[ecx+04]
 jle _ExitMG

 mov [ecx+04],eax

_ExitMG:
 mov eax,[ecx+04]                  // Original code (gold)
 ret                               // Original code
 jmp _BackMG                       // Back to main code (just to keep the template)

//=========================================
 db '===========================&gt;'
 db 'CE6.2 Script by Recifense 070212'
//=========================================
// Variables
iEnableMR:
 dd 0
iEnableGM:
 dd 0
iEnableMM:
 dd 0
iEnableMP:
 dd 0
iEnableMX:
 dd 0
iEnableMG:
 dd 0
pUnit:
 dd 0
pXP:
 dd 0
pGold:
 dd 0
pPlayer:
 dd MyCode
iPlayerID:
 dd MyCode

//=========================================
// Hacking Points
LUDO+00250a12:
 jmp _MonRes1
 nop
_BackMR1:

LUDO+00250a54:
 jmp _MonRes2
 nop
 nop
_BackMR2:

LUDO+00250a97:
 jmp _MonRes3
 nop
 nop
_BackMR3:

LUDO+00464fd0:
 jmp _GodModeH
 nop
_BackGMH:

LUDO+00425493:
 jmp _GodModeB
_BackGMB:

LUDO+00255764:
 jmp _MonMana
_BackMM:

LUDO+002bc1d3:
 jmp _MonXP
 nop
_BackMX:

LUDO+003c4400:
 jmp _MonGold
_BackMG:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
LUDO+00250a12:
// mov ecx,[esp+1C]
// cmp ecx,eax
 db 8b 4c 24 1c 3b c8

LUDO+00250a54:
// mov eax,[esp+1C]
// cmp eax,[edi+78]
 db 8b 44 24 1c 3b 47 78

LUDO+00250a97:
// mov eax,[esp+1C]
// cmp eax,[edi+78]
 db 8b 44 24 1c 3b 47 78

LUDO+00464fd0:
// movss xmm0,[esp+04]
 db f3 0f 10 44 24 04

LUDO+00425493:
// movss xmm0,[ebp+18]
 db f3 0f 10 45 18

LUDO+00255764:
// movss xmm0,[edi+18]
 db f3 0f 10 47 18

LUDO+002bc1d3:
// mov ecx,esi
// mov [esp+18],eax
 db 8b ce 89 44 24 18

LUDO+003c4400:
// mov eax,[ecx+04]
// ret
// int 3
 db 8b 41 04 c3 cc

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(pXP)
unregistersymbol(pGold)
unregistersymbol(pPlayer)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMP)
unregistersymbol(iEnableMX)
unregistersymbol(iEnableMG)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>179</ID>
          <Description>"Enable/Disable Minimum Resources =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>208</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>209</ID>
          <Description>"Enable/Disable Full Mana =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>211</ID>
          <Description>"Enable/Disable Quick Level Up =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMX</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>212</ID>
          <Description>"Enable/Disable Minimum Gold =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>204</ID>
          <Description>"========= Some Hero's Explicit Values ========="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pXP</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>205</ID>
              <Description>"Current Experience Points"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pXP</Address>
              <Offsets>
                <Offset>94</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>206</ID>
              <Description>"Available Attribute Points"</Description>
              <Color>0000FF</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pXP</Address>
              <Offsets>
                <Offset>12</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>207</ID>
              <Description>"Current Gold"</Description>
              <Color>0000FF</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pGold</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>213</ID>
      <Description>"Stein"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>127BF028</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>214</ID>
      <Description>"[X] &lt;== Spellforce 2 Faith in Destiny v2.02 Script v1.1"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : SpellForce 2 Faith in Destiny
 Game Version  : 2.02 #85918
 Proces Name   : SpellForce2FaithinDestiny.exe
 Script Version: 1.1
 CE Version    : 6.2
 Release date  : 02-Jul-2012
 Author        : Recifense
 History:
 20-Jun-12: First Release
 02-Jul-12: Removing unlimited units (v1.1)
 Features:
 - Minimum Resources
 - God Mode
   - Units
   - Buildings
 - Full Mana
 - Quick Level Up
 - Minimum Gold
 - Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"SpellForce2FaithinDestiny.exe")

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(LUDO+00250a12,8b 4c 24 1c 3b c8)    //_MR1
assert(LUDO+00250a54,8b 44 24 1c 3b 47 78) //_MR2
assert(LUDO+00250a97,8b 44 24 1c 3b 47 78) //_MR3
assert(LUDO+00464fd0,f3 0f 10 44 24 04)    //_GMH
assert(LUDO+00425493,f3 0f 10 45 18)       //_GMB
assert(LUDO+00255764,f3 0f 10 47 18)       //_MM
assert(LUDO+002bc1d3,8b ce 89 44 24 18)    //_MX
assert(LUDO+003c4400,8b 41 04 c3)          //_MG

//=========================================
alloc(MyCode,2048,LUDO)
//=========================================
// Declaration section
label(_MonRes1)
label(_MonR10)
label(_BackMR1)
label(_ExitMR1)
label(_MonRes2)
label(_BackMR2)
label(_ExitMR2)
label(_MonRes3)
label(_BackMR3)
label(_ExitMR3)
label(_GodModeH)
label(_BackGMH)
label(_ExitGMH)
label(_GodModeB)
label(_BackGMB)
label(_ExitGMB)
label(_MonMana)
label(_BackMM)
label(_ExitMM)
label(_MonXP)
label(_BackMX)
label(_ExitMX)
label(_MonGold)
label(_BackMG)
label(_ExitMG)
label(pUnit)
label(pXP)
label(pGold)
label(pPlayer)
label(iPlayerID)
label(iEnableMR)
label(iEnableGM)
label(iEnableMM)
label(iEnableMP)
label(iEnableMX)
label(iEnableMG)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(pXP)
registersymbol(pGold)
registersymbol(pPlayer)
registersymbol(iEnableMR)
registersymbol(iEnableGM)
registersymbol(iEnableMM)
registersymbol(iEnableMP)
registersymbol(iEnableMX)
registersymbol(iEnableMG)

//=========================================
MyCode:
//=========================================
_MonRes1:
 mov ecx,[esp+1C]                  // Original code
 cmp ecx,eax                       // Original code
 push ebx
 je _ExitMR1

 mov ebx,[edi+10]

 mov [pPlayer],edi
 mov [iPlayerID],ebx

 cmp dword ptr [iEnableMP],0
 je _MonR10                        // Jump if feature is disabled

// mov word ptr [edi+100],0

_MonR10:
 cmp dword ptr [iEnableMR],0
 je _ExitMR1                       // Jump if feature is disabled

 mov ebx,#6200
 cmp ebx,[ecx+10]
 jle _ExitMR1

 mov [ecx+10],ebx

_ExitMR1:
 pop ebx

 mov ecx,[esp+1C]                  // Original code
 cmp ecx,eax                       // Original code
 jmp _BackMR1                      // Back to main code

//=========================================
_MonRes2:
 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 push ebx
 je _ExitMR2

 cmp dword ptr [iEnableMR],0
 je _ExitMR2                       // Jump if feature is disabled

 mov ebx,#6200
 cmp ebx,[eax+10]
 jle _ExitMR2

 mov [eax+10],ebx

_ExitMR2:
 pop ebx

 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 jmp _BackMR2                      // Back to main code

//=========================================
_MonRes3:
 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 push ebx
 je _ExitMR3

 cmp dword ptr [iEnableMR],0
 je _ExitMR3                       // Jump if feature is disabled

 mov ebx,#6200
 cmp ebx,[eax+10]
 jle _ExitMR3

 mov [eax+10],ebx

_ExitMR3:
 pop ebx

 mov eax,[esp+1C]                  // Original code
 cmp eax,[edi+78]                  // Original code
 jmp _BackMR3                      // Back to main code

//=========================================
// Human Entity
_GodModeH:
 push eax
 push ebx

 mov eax,[esp+0c]
 test eax,eax
 jns _ExitGMH

 mov [pUnit],ecx                   // Save ptr for debugging

 cmp dword ptr [iEnableGM],0
 je _ExitGMH                       // Jump if feature is disabled

 cmp ebp,05000000
 jle _ExitGMH

 test ebp,ebp
 js _ExitGMH

 mov eax,[ebp+000000d8]
 cmp eax,[iPlayerID]
 jne _ExitGMH

 xor eax,eax                       // value2decrease = 0
 mov [esp+0c],eax

 mov eax,[ecx+1c]
 cmp eax,[ecx+18]
 jle _ExitGMH

 mov [ecx+18],eax

_ExitGMH:
 pop ebx
 pop eax

 movss xmm0,[esp+04]               // Original code
 jmp _BackGMH                      // Back to main code

//=========================================
// Building Entity
_GodModeB:
 push eax

 cmp dword ptr [iEnableGM],0
 je _ExitGMB                       // Jump if feature is disabled

 mov eax,[esi+000000bc]
 cmp eax,[iPlayerID]
 jne _ExitGMB

 mov eax,[ebp+1c]
 cmp eax,[ebp+18]
 jle _ExitGMB

 mov [ebp+18],eax

_ExitGMB:
 pop eax

 movss xmm0,[ebp+18]               // Original code (rd HP)
 jmp _BackGMB                      // Back to main code

//=========================================
_MonMana:
 push eax

 cmp dword ptr [iEnableMM],0
 je _ExitMM                       // Jump if feature is disabled

 mov eax,[esi+000000d8]
 cmp eax,[iPlayerID]
 jne _ExitMM

 mov eax,[edi+1c]
 cmp eax,[edi+18]
 jle _ExitMM

 mov [edi+18],eax

_ExitMM:
 pop eax

 movss xmm0,[edi+18]               // Original code (rd mana)
 jmp _BackMM                       // Back to main code

//=========================================
// ESI = pXP  (ESP+20 = pUnitInfo)
// EAX = XP_Needed
_MonXP:
 mov [pXP],esi

 cmp dword ptr [iEnableMX],0
 je _ExitMX                        // Jump if feature is disabled

 mov ecx,[esi+00000094]
 cmp eax,ecx
 jle _ExitMX

 mov ecx,eax
 dec ecx
 mov [esi+00000094],ecx            // cXP = needed - 1

_ExitMX:
 mov [esp+18],eax                  // Original code (needed XP)
 mov ecx,esi                       // Original code (pXP)
 jmp _BackMX                       // Back to main code

//=========================================
// In the inventory
_MonGold:
 mov [pGold],ecx

 cmp dword ptr [iEnableMG],0
 je _ExitMG                        // Jump if feature is disabled

 mov eax,#62000
 cmp eax,[ecx+04]
 jle _ExitMG

 mov [ecx+04],eax

_ExitMG:
 mov eax,[ecx+04]                  // Original code (gold)
 ret                               // Original code
 jmp _BackMG                       // Back to main code (just to keep the template)

//=========================================
 db '===========================&gt;'
 db 'CE6.2 Script by Recifense 070212'
//=========================================
// Variables
iEnableMR:
 dd 0
iEnableGM:
 dd 0
iEnableMM:
 dd 0
iEnableMP:
 dd 0
iEnableMX:
 dd 0
iEnableMG:
 dd 0
pUnit:
 dd 0
pXP:
 dd 0
pGold:
 dd 0
pPlayer:
 dd MyCode
iPlayerID:
 dd MyCode

//=========================================
// Hacking Points
LUDO+00250a12:
 jmp _MonRes1
 nop
_BackMR1:

LUDO+00250a54:
 jmp _MonRes2
 nop
 nop
_BackMR2:

LUDO+00250a97:
 jmp _MonRes3
 nop
 nop
_BackMR3:

LUDO+00464fd0:
 jmp _GodModeH
 nop
_BackGMH:

LUDO+00425493:
 jmp _GodModeB
_BackGMB:

LUDO+00255764:
 jmp _MonMana
_BackMM:

LUDO+002bc1d3:
 jmp _MonXP
 nop
_BackMX:

LUDO+003c4400:
 jmp _MonGold
_BackMG:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
LUDO+00250a12:
// mov ecx,[esp+1C]
// cmp ecx,eax
 db 8b 4c 24 1c 3b c8

LUDO+00250a54:
// mov eax,[esp+1C]
// cmp eax,[edi+78]
 db 8b 44 24 1c 3b 47 78

LUDO+00250a97:
// mov eax,[esp+1C]
// cmp eax,[edi+78]
 db 8b 44 24 1c 3b 47 78

LUDO+00464fd0:
// movss xmm0,[esp+04]
 db f3 0f 10 44 24 04

LUDO+00425493:
// movss xmm0,[ebp+18]
 db f3 0f 10 45 18

LUDO+00255764:
// movss xmm0,[edi+18]
 db f3 0f 10 47 18

LUDO+002bc1d3:
// mov ecx,esi
// mov [esp+18],eax
 db 8b ce 89 44 24 18

LUDO+003c4400:
// mov eax,[ecx+04]
// ret
// int 3
 db 8b 41 04 c3 cc

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(pXP)
unregistersymbol(pGold)
unregistersymbol(pPlayer)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMP)
unregistersymbol(iEnableMX)
unregistersymbol(iEnableMG)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>215</ID>
          <Description>"Enable/Disable Minimum Resources =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>216</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>217</ID>
          <Description>"Enable/Disable Full Mana =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>218</ID>
          <Description>"Enable/Disable Quick Level Up =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMX</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>219</ID>
          <Description>"Enable/Disable Minimum Gold =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>220</ID>
          <Description>"========= Some Hero's Explicit Values ========="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pXP</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>221</ID>
              <Description>"Current Experience Points"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pXP</Address>
              <Offsets>
                <Offset>94</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>222</ID>
              <Description>"Available Attribute Points"</Description>
              <Color>0000FF</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pXP</Address>
              <Offsets>
                <Offset>12</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>223</ID>
              <Description>"Current Gold"</Description>
              <Color>0000FF</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pGold</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"[X] &lt;== Spellforce Platinum Edition v1.54.75000 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Spellforce - Platinum Edition
 Game Version  : 1.54.75000 (steam)
 Game Sponsor  : MySelf (via Steam)
 Proces Name   : SpellForce.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 19-Dec-2012
 Author        : Recifense
 History:
 01-Aug-10: First Release
 19-Aug-12: Adapted to new template and added minimum gold.
 Features:
 - God Mode (for player's units and buildings)
 - Unlimited Mana
 - Minimum Resources (RTS)
 - Quick Level Up (One level per kill)
 - Unlimited Points (this could invalidate the character)
 - Minimum Gold
 - pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,SpellForce.exe)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(LUDO+003fdc38,66 8b 44 01 48 66 89 85 3c fe ff ff)
assert(LUDO+003fdc62,66 8b 44 01 56 66 89 85 38 fe ff ff)
assert(LUDO+0023e96c,03 d0 8b 44 91 0b c2 0c 00)
assert(LUDO+00674c89,8b 4a 04 66 8b 52 08 03 c6 3b c1)
assert(LUDO+006741e4,66 ff 88 d3 00 00 00 8b c7 5f 5e)
assert(LUDO+0067415b,66 ff 88 d1 00 00 00 8b c7 5f 5e)
assert(LUDO+00454890,66 89 41 06 5b 59 c2 04 00)
assert(LUDO+003418b1,2b c2 66 89 01 c2 08 00)
assert(LUDO+00694910,8b 01 8b 48 04 85 c9 56 57 8b 7c 24 0c)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHP)
label(_BackMH)
label(_ExitMH)
label(_MonMana)
label(_BackMM)
label(_ExitMM)
label(_MonRes)
label(_BackMR)
label(_ExitMR)
label(_MonXP)
label(_BackMX)
label(_ExitMX)
label(_MonSP)
label(_BackMS)
label(_ExitMS)
label(_MonAP)
label(_BackMA)
label(_ExitMA)
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_GodModeB)
label(_BackGMB)
label(_ExitGMB)
label(_MonGold)
label(_BackMG)
label(_ExitMG)
label(pHero)
label(pRes)
label(pGold)
label(iEnableMH)
label(iEnableMM)
label(iEnableMR)
label(iEnableMX)
label(iEnableMSA)
label(iEnableMG)
label(iMinGold)
label(iEAX)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pHero)
registersymbol(pRes)
registersymbol(pGold)
registersymbol(iEnableMH)
registersymbol(iEnableMM)
registersymbol(iEnableMR)
registersymbol(iEnableMX)
registersymbol(iEnableMSA)
registersymbol(iEnableMG)
registersymbol(iMinGold)

//=========================================
MyCode:
//=========================================
_MonHP:
 cmp dword ptr [iEnableMH],0
 je _ExitMH                     // Jump if feature is disabled

 cmp byte ptr [ecx+eax+1c],01   // Player's unit ?
 jne _ExitMH

 mov word ptr [ecx+eax+48],0000 // Negative HP = 0

_ExitMH:
 mov ax,[ecx+eax+48]            // Original code
 jmp _BackMH                    // Back to main code

//=========================================
_MonMana:
 cmp dword ptr [iEnableMM],0
 je _ExitMM                     // Jump if feature is disabled

 cmp byte ptr [ecx+eax+1c],01   // Player's unit ?
 jne _ExitMM

 mov word ptr [ecx+eax+56],0000 // Negative HP = 0

_ExitMM:
 mov ax,[ecx+eax+56]            // Original code
 jmp _BackMM                    // Back to main code

//=========================================
_MonRes:
 add edx,eax                    // Original code

 mov [pRes],ecx                 // Save pointer for debugging

 cmp dword ptr [iEnableMR],0
 je _ExitMR                     // Jump if feature is disabled

 cmp dword ptr [ecx+edx*4+0b],0 // Is thare some of this resource?
 je _ExitMR                     // Jump if false

 mov eax,#4000                  // Get minimum resource value

 cmp eax,[ecx+edx*4+0b]         // Current value &gt;= minimum?
 jle _ExitMR                    // Jump if true

 mov [ecx+edx*4+0b],eax         // Update current resource value

_ExitMR:
 mov eax,[ecx+edx*4+0b]         // Original code
 jmp _BackMR                    // Back to main code

//=========================================
_MonXP:
 mov ecx,[edx+04]               // Original code
 mov dx,[edx+08]                // Original code

 cmp dword ptr [iEnableMX],0
 je _ExitMX                     // Jump if feature is disabled

 mov eax,ecx                    // Make current XP = Next Level Value

_ExitMX:
 jmp _BackMX                    // Back to main code

//=========================================
// Stat Points
_MonSP:
 cmp dword ptr [iEnableMSA],0
 je _ExitMS                     // Jump if feature is disabled

 inc word ptr [eax+000000d3]    // Points = Points + 1

_ExitMS:
 dec word ptr [eax+000000d3]    // Original code
 jmp _BackMS                    // Back to main code

//=========================================
// Ability Points
_MonAP:
 cmp dword ptr [iEnableMSA],0
 je _ExitMA                     // Jump if feature is disabled

 inc word ptr [eax+000000d1]    // Points = Points + 1

_ExitMA:
 dec word ptr [eax+000000d1]    // Original code
 jmp _BackMA                    // Back to main code

//=========================================
_GodMode:
 cmp dword ptr [iEnableMH],0
 je _ExitGM                     // Jump if feature is disabled

 cmp byte ptr [ecx-26],01       // Player's unit ?
 jne _ExitGM

 xor eax,eax                    // Negative HP = 0

_ExitGM:
 mov [ecx+06],ax                // Original code
 pop ebx                        // Original code
 jmp _BackGM                    // Back to main code

//=========================================
_GodModeB:
 cmp dword ptr [iEnableMH],0
 je _ExitGMB                    // Jump if feature is disabled

 cmp byte ptr [ecx-09],01       // Player's Building ?
 jne _ExitGMB                   // Jump if false

 xor edx,edx                    // Value2Decrease = 0
 mov ax,[ecx+04]                // Gt maximum HP

_ExitGMB:
 sub eax,edx                    // Original code
 mov [ecx],ax                   // Original code
 jmp _BackGMB                   // Back to main code

//=========================================
// Gold
_MonGold:
 push ebx

 mov eax,[ecx]                  // Original code
 mov ecx,[eax+04]               // Original code
 test ecx,ecx
 jz _ExitMG

 cmp dword ptr [iEnableMG],0
 je _ExitMG                     // Jump if feature is disabled

 mov [pGold],ecx
 mov ebx,[iMinGold]
 cmp ebx,[ecx+000000bd]
 jle _ExitMG

 mov [ecx+000000bd],ebx

_ExitMG:
 pop ebx
 jmp _BackMG                    // Back to main code

//=========================================
 db '=============================&gt;'
 db 'CE6.2 Script by Recifense 121912'
//=========================================
// Variables
iEnableMH:
 dd 0
iEnableMM:
 dd 0
iEnableMR:
 dd 0
iEnableMX:
 dd 0
iEnableMSA:
 dd 0
iEnableMG:
 dd 0
pHero:
 dd 0
pRes:
 dd 0
pGold:
 dd 0
iEAX:
 dd 0
iMinGold:
 dd #1000

//=========================================
// Hacking Points
LUDO+003fdc38:
 jmp _MonHP
_BackMH:

LUDO+003fdc62:
 jmp _MonMana
_BackMM:

LUDO+0023e96c:
 jmp _MonRes
 nop
_BackMR:

LUDO+00674c89:
 jmp _MonXP
 nop
 nop
_BackMX:

LUDO+006741e4:
 jmp _MonSP
 nop
 nop
_BackMS:

LUDO+0067415b:
 jmp _MonAP
 nop
 nop
_BackMA:

LUDO+00454890:
 jmp _GodMode
_BackGM:

LUDO+003418b1:
 jmp _GodModeB
_BackGMB:

LUDO+00694910:
 jmp _MonGold
_BackMG:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
LUDO+003fdc38:
// mov ax,[ecx+eax+48]
 db 66 8b 44 01 48

LUDO+003fdc62:
// mov ax,[ecx+eax+56]
 db 66 8b 44 01 56

LUDO+0023e96c:
// add edx,eax
// mov eax,[ecx+edx*4+0b]
 db 03 d0 8b 44 91 0b

LUDO+00674c89:
// mov ecx,[edx+04]
// mov dx,[edx+08]
 db 8b 4a 04 66 8b 52 08

LUDO+006741e4:
// dec word ptr [eax+000000d3]
 db 66 ff 88 d3 00 00 00

LUDO+0067415b:
// dec word ptr [eax+000000d1]
 db 66 ff 88 d1 00 00 00

LUDO+00454890:
// mov [ecx+06],ax
// pop ebx
 db 66 89 41 06 5b

LUDO+003418b1:
// sub eax,edx
// mov [ecx],ax
 db 2b c2 66 89 01

LUDO+00694910:
// mov eax,[ecx]
// mov ecx,[eax+04]
 db 8b 01 8b 48 04

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pHero)
unregistersymbol(pRes)
unregistersymbol(pGold)
unregistersymbol(iEnableMH)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableMX)
unregistersymbol(iEnableMSA)
unregistersymbol(iEnableMG)
unregistersymbol(iMinGold)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMH</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Enable/Disable Fast Mana Refuel"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Enable/Disable Minimum Resources"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Enable/Disable Minimum Gold"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Minimum Gold Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinGold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Enable/Disable Quick Level Up"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMX</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>224</ID>
      <Description>"[X] &lt;== Spellforce 2 Faith in Destiny v2.26.2072 Script v1.1"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : SpellForce 2 Faith in Destiny
 Game Version  : 2.26.2072
 Proces Name   : SpellForce2FaithinDestiny.exe
 Script Version: 1.1
 CE Version    : 6.2
 Release date  : 20-Dec-2012
 Author        : Recifense
 History:
 20-Jun-12: First Release
 02-Jul-12: Removing unlimited units (v1.1)
 20-Dec-12: Release for version 2.26.2072 (Steam)
 Features:
 - Minimum Resources
 - God Mode
   - Units
   - Buildings
 - Full Mana
 - Quick Level Up
 - Minimum Gold
 - Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"SpellForce2FaithinDestiny.exe")
define(GMHB,LUDO+0041b0b3)
define(MMHB,LUDO+0048b133)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(LUDO+0025495a,8b 41 10 eb 02 33 c0 89 44 24 18) //_MR1
assert(LUDO+0025499d,8b 40 10 eb 02 33 c0 89 44 24 18) //_MR2
assert(LUDO+002549e0,8b 40 10 eb 02 33 c0 89 44 24 18) //_MR3
assert(LUDO+00468de0,f3 0f 10 44 24 04 0f 57 c9 56 8b) //_GMH
assert(LUDO+0042a333,f3 0f 10 45 18 8b 16 8b ce f3 0f) //_GMB
assert(LUDO+00259734,f3 0f 10 47 18 f3 0f 58 05)       //_MM
assert(LUDO+002c28f3,8b ce 89 44 24 18 e8)             //_MX
assert(LUDO+003e0830,8b 81 68 01 00 00 c3)             //_MG

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonRes1)
label(_BackMR1)
label(_ExitMR1)
label(_MonRes2)
label(_BackMR2)
label(_ExitMR2)
label(_MonRes3)
label(_BackMR3)
label(_ExitMR3)
label(_GodModeH)
label(_BackGMH)
label(_ExitGMH)
label(_GodModeB)
label(_BackGMB)
label(_ExitGMB)
label(_MonMana)
label(_BackMM)
label(_ExitMM)
label(_MonXP)
label(_BackMX)
label(_ExitMX)
label(_MonGold)
label(_BackMG)
label(_ExitMG)
label(pUnit)
label(pXP)
label(pGold)
label(pPlayer)
label(iPlayerID)
label(iEnableMR)
label(iEnableGM)
label(iEnableMM)
label(iEnableMP)
label(iEnableMX)
label(iEnableMG)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(pXP)
registersymbol(pGold)
registersymbol(pPlayer)
registersymbol(iEnableMR)
registersymbol(iEnableGM)
registersymbol(iEnableMM)
registersymbol(iEnableMP)
registersymbol(iEnableMX)
registersymbol(iEnableMG)

//=========================================
MyCode:
//========================================= ok
_MonRes1:
 mov eax,[edi+10]                  // Get PlayerID
 mov [iPlayerID],eax               // Save it for further use
 mov [pPlayer],edi

 cmp dword ptr [iEnableMR],0
 je _ExitMR1                       // Jump if feature is disabled

 mov eax,#6200                     // EAX = minimum value
 cmp eax,[ecx+10]                  // Minimum value &gt; current value?
 jle _ExitMR1                      // Jump if false

 mov [ecx+10],eax                  // Update value

_ExitMR1:
 mov eax,[ecx+10]                  // Original code
 jmp LUDO+254961                   // Original code
 jmp _BackMR1                      // Back to main code

//========================================= ok
_MonRes2:
 push ecx

 cmp dword ptr [iEnableMR],0
 je _ExitMR2                       // Jump if feature is disabled

 mov ecx,#6200                     // ECX = minimum value
 cmp ecx,[eax+10]                  // Minimum value &gt; current value?
 jle _ExitMR2                      // Jump if false

 mov [eax+10],ecx                  // Update value

_ExitMR2:
 pop ecx

 mov eax,[eax+10]                  // Original code
 jmp LUDO+2549a4                   // Original code
 jmp _BackMR2                      // Back to main code

//========================================= ok
_MonRes3:
 push ecx

 cmp dword ptr [iEnableMR],0
 je _ExitMR3                       // Jump if feature is disabled

 mov ecx,#6200                     // ECX = minimum value
 cmp ecx,[eax+10]                  // Minimum value &gt; current value?
 jle _ExitMR3                      // Jump if false

 mov [eax+10],ecx                  // Update value

_ExitMR3:
 pop ecx

 mov eax,[eax+10]                  // Original code
 jmp LUDO+2549e7                   // Original code
 jmp _BackMR3                      // Back to main code

//=========================================
// Human Entity
_GodModeH:
 push ebx

 mov eax,[ecx+18]

 mov eax,[esp+04]
 cmp eax,GMHB
 jne _ExitGMH

 mov eax,[esp+08]
 test eax,eax
 jns _ExitGMH

 cmp ebp,05000000
 jle _ExitGMH

 cmp dword ptr [iEnableGM],0
 je _ExitGMH                       // Jump if feature is disabled

 mov eax,[ebp+000000d8]
 cmp eax,[iPlayerID]
 jne _ExitGMH

 mov eax,(float)1000
 mov [esp+08],eax

 movss xmm0,[ecx+1c]
 addss xmm0,[ecx+20]
 movss [ecx+18],xmm0

_ExitGMH:
 pop ebx

 movss xmm0,[esp+04]               // Original code
 jmp _BackGMH                      // Back to main code

//=========================================
// Building Entity
_GodModeB:
 push eax

 cmp dword ptr [iEnableGM],0
 je _ExitGMB                       // Jump if feature is disabled

 mov eax,[esi+000000bc]
 cmp eax,[iPlayerID]
 jne _ExitGMB

 movss xmm0,[ebp+1C]
 addss xmm0,[ebp+20]
 movss [ebp+18],xmm0

_ExitGMB:
 pop eax

 movss xmm0,[ebp+18]               // Original code (rd HP)
 jmp _BackGMB                      // Back to main code

//=========================================
_MonMana:
 push eax

 mov eax,[esi+000000d8]
 cmp eax,[iPlayerID]
 jne _ExitMM

 mov [pUnit],esi                   // Save ptr for debugging

 cmp dword ptr [iEnableMM],0
 je _ExitMM                       // Jump if feature is disabled

 movss xmm0,[edi+1C]
 addss xmm0,[edi+20]
 movss [edi+18],xmm0

_ExitMM:
 pop eax

 movss xmm0,[edi+18]               // Original code (rd mana)
 jmp _BackMM                       // Back to main code

//========================================= ok
// ESI = pXP  (ESP+20 = pUnitInfo)
// EAX = XP_Needed
_MonXP:
 mov [pXP],esi

 cmp dword ptr [iEnableMX],0
 je _ExitMX                        // Jump if feature is disabled

 mov ecx,[esi+00000094]
 cmp eax,ecx
 jle _ExitMX

 mov ecx,eax
 dec ecx
 mov [esi+00000094],ecx            // cXP = needed - 1

_ExitMX:
 mov [esp+18],eax                  // Original code (needed XP)
 mov ecx,esi                       // Original code (pXP)
 jmp _BackMX                       // Back to main code

//========================================= ok
_MonGold:
 mov [pGold],ecx

 cmp dword ptr [iEnableMG],0
 je _ExitMG                 // Jump if feature is disabled

 mov eax,[ecx+10]           // Get OwnerID
 cmp eax,[iPlayerID]        // PlayerÂ´s gold?
 jne _ExitMG                // Jump if false

 mov eax,[ecx+00000168]     // Read gold value
 cmp dword ptr [eax+04],#62000 // Grater than minimum value?
 jge _ExitMG                // Jump if true

 mov dword ptr [eax+04],#62000 // Make gold = minimum value (62000)

_ExitMG:
 mov eax,[ecx+00000168]     // Original code
 jmp _BackMG                // Jump back to main code

//=========================================
 db '=======================================&gt;'
 db 'CE6.2 Script by Recifense 122012'
//=========================================
// Variables
iEnableGM:
 dd 0
iEnableMR:
 dd 0
iEnableMM:
 dd 0
iEnableMP:
 dd 0
iEnableMX:
 dd 0
iEnableMG:
 dd 0
pUnit:
 dd MyCode
pXP:
 dd 0
pGold:
 dd 0
pPlayer:
 dd MyCode
iPlayerID:
 dd MyCode

//=========================================
// Hacking Points
LUDO+0025495a:
 jmp _MonRes1
_BackMR1:

LUDO+0025499d:
 jmp _MonRes2
_BackMR2:

LUDO+002549e0:
 jmp _MonRes3
_BackMR3:

LUDO+00468de0:
 jmp _GodModeH
 nop
_BackGMH:

LUDO+0042a333:
 jmp _GodModeB
_BackGMB:

LUDO+00259734:
 jmp _MonMana
_BackMM:

LUDO+002c28f3:
 jmp _MonXP
 nop
_BackMX:

LUDO+003e0830:
 jmp _MonGold
 nop
_BackMG:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
LUDO+0025495a:
// mov eax,[ecx+10]
// jmp SpellForce2FaithinDestiny.exe+254961
 db 8b 41 10 eb 02

LUDO+0025499d:
// mov eax,[eax+10]
// jmp SpellForce2FaithinDestiny.exe+2549a4
 db 8b 40 10 eb 02

LUDO+002549e0:
// mov eax,[eax+10]
// jmp SpellForce2FaithinDestiny.exe+2549e7
 db 8b 40 10 eb 02

LUDO+00468de0:
// movss xmm0,[esp+04]
 db f3 0f 10 44 24 04

LUDO+0042a333:
// movss xmm0,[ebp+18]
 db f3 0f 10 45 18

LUDO+00259734:
// movss xmm0,[edi+18]
 db f3 0f 10 47 18

LUDO+002c28f3:
// mov ecx,esi
// mov [esp+18],eax
 db 8b ce 89 44 24 18

LUDO+003e0830:
// mov eax,[ecx+00000168]
 db 8b 81 68 01 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(pXP)
unregistersymbol(pGold)
unregistersymbol(pPlayer)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMP)
unregistersymbol(iEnableMX)
unregistersymbol(iEnableMG)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>225</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>226</ID>
          <Description>"Enable/Disable Minimum Resources =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>227</ID>
          <Description>"Enable/Disable Full Mana =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>228</ID>
          <Description>"Enable/Disable Quick Level Up =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMX</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>229</ID>
          <Description>"Enable/Disable Minimum Gold =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>230</ID>
          <Description>"========= Some Hero's Explicit Values ========="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pXP</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>231</ID>
              <Description>"Current Experience Points"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pXP</Address>
              <Offsets>
                <Offset>94</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>232</ID>
              <Description>"Available Attribute Points"</Description>
              <Color>0000FF</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pXP</Address>
              <Offsets>
                <Offset>12</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>233</ID>
              <Description>"Current Gold"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pGold</Address>
              <Offsets>
                <Offset>4</Offset>
                <Offset>168</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"[X] &lt;== Spellforce 2 Dragon Storm (Gold) v2.1 Steam Script"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : SpellForce 2 - Dragon Storm (Gold Edition)
 Game Version  : 2.01 (Build #125055)
 Game Sponsor  : MySelf (via Steam)
 Proces Name   : spellforce2.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 19-Dec-2012
 Author        : Recifense
 History:
 24-Feb-09: First Release (version 2.0)(CE 5.5)
 19-Dec-12: Adapted to version 2.1 (steam)
 Features:
 - God Mode
 - Mana Fast Recover
 - Resources (RTS)
 - Minimum Gold
===========================================
}

//=========================================
// Definitions
define(LUDO,spellforce2.exe)
define(BUHP,LUDO+0030b0d4)
define(BBHP,LUDO+0030939e)
define(BUMA,LUDO+0036d72e)
define(MOXP,LUDO+001bbeda)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(LUDO+00170c08,8b 41 10 eb 02 33 c0 89 44 24 18) //_MSt
assert(LUDO+00170c4b,8b 40 10 eb 02 33 c0 89 44 24 18) //_MSi
assert(LUDO+00170c8e,8b 40 10 eb 02 33 c0 89 44 24 18) //_MLe
assert(LUDO+002d41c0,8b 81 68 01 00 00 c3) // _MG
assert(LUDO+0034be90,d9 44 24 04 56 8b f1 d8 46 18) //_GM
assert(LUDO+002bdad0,8b 81 90 00 00 00 c3) // _MX

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonStone)
label(_MonSilver)
label(_MonLenya)
label(_MonGold)
label(_MonXP)
label(_GodMode)
label(_GodM0)
label(_GodM1)
label(_GodMU)
label(_BackMSt)
label(_BackMSi)
label(_BackML)
label(_BackGM)
label(_BackMG)
label(_BackMX)
label(_ExitMSt)
label(_ExitMSi)
label(_ExitML)
label(_ExitGM)
label(_ExitMG)
label(_ExitMX)
label(iPlayerID)
label(fThousand)
label(iEnableMR)
label(iEnableMG)
label(iEnableMM)
label(iEnableMX)
label(iEnableGM)
label(pXP)
label(iUnitID)
label(pUnit)
label(iBack)
label(iCount)
label(pEBP)
label(pEDI)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iPlayerID)
registersymbol(iEnableMR)
registersymbol(iEnableMG)
registersymbol(iEnableMM)
registersymbol(iEnableGM)
registersymbol(iEnableMX)
registersymbol(pXP)
registersymbol(iUnitID)
registersymbol(pUnit)
registersymbol(iBack)
registersymbol(iCount)
registersymbol(pEBP)
registersymbol(pEDI)

//=========================================
MyCode:
//=========================================
_MonStone:
 mov eax,[edi+10]           // Get PlayerID
 mov [iPlayerID],eax        // Save it for further use

 cmp dword ptr [iEnableMR],0
 je _ExitMSt                // Jump if feature is disabled

 mov eax,#2000              // EAX = minimum value
 cmp eax,[ecx+10]           // Minimum value &gt; current value?
 jle _ExitMSt               // Jump if false

 mov [ecx+10],eax           // Update value

_ExitMSt:
 mov eax,[ecx+10]           // Original code
 jmp spellforce2.exe+170c0f // Original code

//=========================================
_MonSilver:
 push ecx

 cmp dword ptr [iEnableMR],0
 je _ExitMSi                // Jump if feature is disabled

 mov ecx,#2000              // ECX = minimum value
 cmp ecx,[eax+10]           // Minimum value &gt; current value?
 jle _ExitMSi               // Jump if false

 mov [eax+10],ecx           // Update value

_ExitMSi:
 pop ecx
 mov eax,[eax+10]           // Original code
 jmp spellforce2.exe+170c52 // Original code

//=========================================
_MonLenya:
 push ecx

 cmp dword ptr [iEnableMR],0
 je _ExitML                 // Jump if feature is disabled

 mov ecx,#2000              // ECX = minimum value
 cmp ecx,[eax+10]           // Minimum value &gt; current value?
 jle _ExitML                // Jump if false

 mov [eax+10],ecx           // Update value

_ExitML:
 pop ecx
 mov eax,[eax+10]           // Original code
 jmp spellforce2.exe+170c95 // Original code

 //=========================================
_MonGold:
 cmp dword ptr [iEnableMG],0
 je _ExitMG                 // Jump if feature is disabled

 mov eax,[ecx+10]           // Get OwnerID
 cmp eax,[iPlayerID]        // Player´s gold?
 jne _ExitMG                // Jump if false

 mov eax,[ecx+00000168]     // Read gold value
 cmp dword ptr [eax+04],#20000 // Grater than minimum value?
 jge _ExitMG                // Jump if true

 mov dword ptr [eax+04],#20000 // Make gold = minimum value (20000)

_ExitMG:
 mov eax,[ecx+00000168]     // Original code
 jmp _BackMG                // Jump back to main code

//========================================= ok
_GodMode:
 cmp dword ptr [iEnableGM],0
 je _ExitGM                 // Jump if feature is disabled

 mov eax,[esp]
 cmp eax,BUHP               // Unit HP?
 je _GodMU                  // Jump if true

 cmp dword ptr [iEnableMM],0
 je _GodM0                  // Jump if feature is disabled

 cmp eax,BUMA               // Unit Mana?
 jne _GodM0                 // Jump if false

 mov eax,[edi+000000cc]     // Get OwnerID
 jmp _GodM1

_GodMU:
 mov eax,[ebp+000000cc]     // Get OwnerID
 jmp _GodM1

_GodM0:
 cmp eax,BBHP               // Building?
 jne _ExitGM                // Jump if false

 mov eax,[edi+000000bc]     // Get OwnerID

_GodM1:
 cmp eax,[iPlayerID]        // Does it belong to the player?
 jne _ExitGM                // Jump if false

 inc dword ptr [iCount]
 mov eax,[fThousand]
 mov [esp+04],eax           // Change the value to +1000

_ExitGM:
 fld dword ptr [esp+04]     // Original code
 push esi                   // Original code
 jmp _BackGM                // Back to main code

//========================================= ok
// ESP + 14 = fmXP
_MonXP:
 mov [pXP],ecx

 mov eax,[esp]
 cmp eax,MOXP
 jne _ExitMX

 cvtss2si eax,[esp+14]
 lea eax,[esi+eax-1]

 cmp dword ptr [iEnableMX],0
 je _ExitMX                 // Jump if feature is disabled

 cmp eax,[ecx+00000090]
 jle _ExitMX

 mov [ecx+00000090],eax

_ExitMX:
 mov eax,[ecx+00000090]     // Original code
 jmp _BackMX                // Back to main code

//=========================================
 db '========================&gt;'
 db 'CE6.2 Script by Recifense 121912'
//=========================================
// Variables
iEnableGM:
 dd 0
iEnableMM:
 dd 0
iEnableMX:
 dd 0
iEnableMG:
 dd 0
iEnableMR:
 dd 0
iPlayerID:
 dd 0
fThousand:
 dd (float)5000
pXP:
 dd 0
iUnitID:
 dd 0
pUnit:
 dd 0
iBack:
 dd 0
iCount:
 dd 0
pEBP:
 dd 0
pEDI:
 dd 0

//=========================================
// Hacking Points
//spellforce2.exe+172c98:
LUDO+00170c08:
 jmp _MonStone
_BackMSt:

//spellforce2.exe+172cdb:
LUDO+00170c4b:
 jmp _MonSilver
_BackMSi:

//spellforce2.exe+172d1e:
LUDO+00170c8e:
 jmp _MonLenya
_BackML:

//spellforce2.exe+2d67a0:
LUDO+002d41c0:
 jmp _MonGold
 nop
_BackMG:

//spellforce2.exe+34e280:
LUDO+0034be90:
 jmp _GodMode
_BackGM:

//spellforce2.exe+2cf6a0:
LUDO+002bdad0:
 jmp _MonXP
 nop
_BackMX:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
//spellforce2.exe+172c98:
LUDO+00170c08:
// mov eax,[ecx+10]
// jmp spellforce2.exe+170c0f
 db 8b 41 10 eb 02

//spellforce2.exe+172cdb:
LUDO+00170c4b:
// mov eax,[eax+10]
// jmp spellforce2.exe+170c52
 db 8b 40 10 eb 02

//spellforce2.exe+172d1e:
LUDO+00170c8e:
// mov eax,[eax+10]
// jmp spellforce2.exe+170c95
 db 8b 40 10 eb 02

//spellforce2.exe+2d67a0:
LUDO+002d41c0:
// mov eax,[ecx+00000168]
 db 8b 81 68 01 00 00

//spellforce2.exe+34e280:
LUDO+0034be90:
// fld dword ptr [esp+04]
// push esi
 db d9 44 24 04 56

//spellforce2.exe+2cf6a0:
LUDO+002bdad0:
// mov eax,[ecx+00000090]
 db 8b 81 90 00 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iPlayerID)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableMG)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMX)
unregistersymbol(iUnitID)
unregistersymbol(pXP)
unregistersymbol(pUnit)
unregistersymbol(iBack)
unregistersymbol(iCount)
unregistersymbol(pEBP)
unregistersymbol(pEDI)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Enable/Disable God Mode =&gt;(1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable Fast Recover Mana =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Enable/Disable Quick Level Up =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMX</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Enable/Disable Minimum Gold =&gt;(1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Enable/Disable Minimum Resouces =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>234</ID>
      <Description>"Stein"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>2BA8BEE0</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>LUDO</Name>
      <Address>SpellForce2FaithinDestiny.exe</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>003C0258</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pXP</Name>
      <Address>003C025C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGold</Name>
      <Address>003C0260</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>003C0264</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMR</Name>
      <Address>003C0240</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM</Name>
      <Address>003C0244</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMM</Name>
      <Address>003C0248</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMP</Name>
      <Address>003C024C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMX</Name>
      <Address>003C0250</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMG</Name>
      <Address>003C0254</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : SpellForce 2 - Dragon Storm (Gold Edition)
 Game Version  : 2.01 (Build #125055)
 Game Sponsor  : MySelf (via Steam)
 Proces Name   : spellforce2.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 19-Dec-2012
 Author        : Recifense
 History:
 24-Feb-09: First Release (version 2.0)(CE 5.5)
 19-Dec-12: Adapted to version 2.1 (steam)
 Features:
 - God Mode          [1]
 - Mana Fast Recover [2]
 - Quick Level Up    [3]
 - Resources (RTS)   [4]
 - Minimum Gold      [5]
===========================================
[1] For player's units and buildings;
[2] For player's units
[3] Player's hero should selected (XP BAR visible)
[4] Minimum Value (2000)
[5] Minimum value (20000)
===========================================
HOTKEYS:
CTRL+Home  = Enable  all cheats (but Quick Level Up)
CTRL+End   = Disable all cheats (but Quick Level Up)
CTRL+PageUp   = Enable  Quick Level Up
CTRL+PageDown = Disable Quick Level Up
===========================================
Cheers!
</Comments>
</CheatTable>
